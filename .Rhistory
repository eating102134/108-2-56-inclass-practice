# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
str(tainanSportsMap, max.level = 1)
name(tainanSportsMap)
names(tainanSportsMap)
str(tainanSportsMap[c(1,382,1076)], max.level = 1)
str(tainanSportsMap[c(1,382,1076)], max.level = 1)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
names(taipeiNightMarkets)
str(taipeiNightMarkets[c(1,5,10,14)], max.level = 1)
##或是也可以寫成下面這樣用邏輯TRUE FALSE來回答
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)], max.level = 1)
str(taipeiNightMarkets[c(1,5,10,14)], max.level = 1)
##或是也可以寫成下面這樣用邏輯TRUE FALSE來回答
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)], max.level = 1)
vectorExample[c(T,T,F)] # 要，要，不要
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
rep(F,14)
selectedMarket <-rep(F,14)
print(selectedMarket)
selectedMarket[c(1,5,10,14)] <-TRUE
##這邊這個箭頭代表的意思就是replacement 在R裡面叫做generic
print(selectedMarket)
str(listExample)
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
get1 # 學期拿出來，有3個元素的list
str(get1)
str(get1, max.level = 1)
str(get2, max.level = 1)
str(get2, max.level = 2)
numVector <- c(2,3,6,-1,4,2,6)
select1 <- numVector[c(1,4)]; select1
select2 <- select1[[1]]; select2
# 相當於
numVector[c(1,4)][[1]]
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2
# 相當於
numVector[c(T,T,F,T,F,F,T)][c(1,4)]
print(econOnly)
econOnly <- majors[c(1,2,5)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econOnly <- majors[c(1,2,5)]
print(econOnly)
names(econOnly)
econOnly <- majors[c(1,2,5)]
print(econOnly)
names[c(1,2,5)]
gender[c(1,2,5)]
print(names)
print(gender)
econOnly <- majors[c(1,2,5)]
print(econOnly)
names[c(1,2,5)]
gender[c(1,2,5)]
ecinFemaleOnly <- gender[c(1,2,5)][c(T,T,F)]
econFemaleOnly <- gender[c(1,2,5)][c(T,T,F)]
print(econFemaleOnly)
econOnly <- majors[c(1,2,5)]
print(econOnly)
names[c(1,2,5)]
gender[c(1,2,5)]
econFemaleOnly <- gender[c(1,2,5)][c(T,T,F)]
print(econFemaleOnly)
names[["econFemaleOnly"]]
econOnly <- majors[c(T,T,F,F,T)]
print(econOnly)
names[["econOnly"]]
econOnly <- majors[c(T,T,F,F,T)]
print(econOnly)
econOnlyNames <-names[c(T,T,F,F,T)]
print(econOnlyNames)
print(econonlyGender)
econonlyGender <-gendes[c(T,T,F,F,T)]
econonlyGender <-gender[c(T,T,F,F,T)]
print(econonlyGender)
print(econFemaleOnly)
names[c(1,2)]
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
install.packages(c("lubridate"))
install.packages(c("lubridate"))
library(lubridate)
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
install.packages(c("lubridate"))
library(lubridate)
install.packages(c("lubridate"))
library(lubridate)
library(lubridate)
two_times <-c(ymd_hms(taiwan_time),dmy_hms(oslo_time))
two_times
class(two_times)
two_times <-c(ymd_hms(taiwan_time),dmy_hms(oslo_time))
class(two_times)
two_times
two_times <-c(ymd_hms(taiwan_time,tz="Asia/Taipei"),dmy_hms(oslo_time,tz="Europe/Oslo"))
class(two_times)
two_times
two_times <-c(ymd_hms(taiwan_time, tz="Asia/Taipei"),dmy_hms(oslo_time, tz="Europe/Oslo"))
class(two_times)
two_times
two_times <-c(ymd_hms("taiwan_time", tz="Asia/Taipei"),dmy_hms("oslo_time", tz="Europe/Oslo"))
class(two_times)
two_times
two_times <-c(ymd_hms("taiwan_time", tz="Asia/Taipei"),dmy_hms("oslo_time", tz="Europe/Oslo"))
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
two_times <-c(ymd_hms("西元2019年4月12日 12點55分30秒", tz="Asia/Taipei"),dmy_hms("18.11.2018 15:33:02", tz="Europe/Oslo"))
class(two_times)
two_times
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",
tz="Europe/Lisbon")
pgTime
two_times <-c(ymd_hms("西元2019年4月12日, 12點55分30秒", tz="Asia/Taipei"),dmy_hms("18.11.2018, 15:33:02", tz="Europe/Oslo"))
class(two_times)
two_times
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
two_times <-c(ymd_hms(taiwan_time),dmy_hms(oslo_time))
two_times
two_times <-c(ymd_hms("taiwan_time",tz="Asia/taipei"),dmy_hms("oslo_time" ,tz="Europe/oslo"))
two_times
two_times <-c(ymd_hms("taiwan_time",tz="Asia/Taipei"),dmy_hms("oslo_time",tz="Europe/Oslo"))
two_times
two_times <-c(ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei"),dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo"))
two_times
taiwan_time1 <-ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei")
taiwan_time1 <-ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei")
oslo_time1 <-dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo")
two_times1 <-c(taiwan_time1,oslo_time1)
two_times1
two_times <-c(ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei"),dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo"))
two_times
two_times <-c(ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei"),dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo"))
class(two_times)
two_times
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
two_times <-c(ymd_hms(taiwan_time,tz="Asia/Taipei"),dmy_hms(oslo_time,tz="Europe/Oslo"))
class(two_times)
two_times
two_times <-c(ymd_hms(taiwan_time,tz="Asia/Taipei"),dmy_hms(oslo_time,tz="Europe/Oslo"))
class(two_times)
two_times
taiwan_time <-ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei")
oslo_time <-dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo")
oslo_time
taiwan_time <-ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei")
oslo_time <-dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo")
two_times <-c(taiwan_time,oslo_time)
class(two_times)
two_times
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
tpeTime
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
two_times <-c(ymd_hms(taiwan_time,tz="Asia/Taipei"),dmy_hms(oslo_time,tz="Europe/Oslo"))
class(two_times)
two_times
two_times <-c(ymd_hms(taiwan_time,tz="Asia/Taipei"),dmy_hms(oslo_time,tz="Europe/Oslo"))
class(two_times)
two_times
two_times_chicago <-with_tz(two_times,tzone = "America/Chicago")
two_times_chicago
two_times_chicago <-with_tz(two_times,tzone = "America/Chicago")
two_times_chicago
course <-list(T,
list("會計學","必",3,
list("星期三",c(7L,8L,9L),"商2F05")))
str(course)
course <-approve=list(T,
list("會計學","必",3,
list("星期三",c(7L,8L,9L),"商2F05")))
course <-list(approve=T,
list("會計學","必",3,
list("星期三",c(7L,8L,9L),"商2F05")))
str(course)
# course
course <-list(approve=T,
course_info=list(coursename="會計學",type="必",credits=3,
time_place=list(weekday="星期三",
time_slots=c(7L,8L,9L),
classroom="商2F05")))
str(course)
# course
course <-list(approve=T,
course_info=list(coursename="會計學",type="必",credits=3,
time_place=list(list(weekday="星期三",
time_slots=c(7L,8L,9L),
classroom="商2F05"))))
str(course)
# course
course <-list(approve=T,
course_info=list(coursename="會計學",type="必",credits=3,
time_place=list(list(weekday="星期三",
time_slots=c(7L,8L,9L),
classroom="商2F05"))))
str(course)
# course
courseUpdate <-list(approve=T,
course_info=list(coursename="會計學",type="必",credits=3,
time_place=list(list(weekday="星期三",
time_slots=
list(c(7L,8L),classroom="商2F05",
5L,classroom="商205")))))
# courseUpdate
str(courseUpdate)
courseUpdate <-list(approve=T,
course_info=list(coursename="會計學",type="必",credits=3,
time_place=list(list(weekday="星期三",
time_slots=c(7L,8L,9L),classroom="商2F05"),
list(weekday="星期二",time_slot=5L,classroom="商2F05"))))
str(courseUpdate)
# courseUpdate
accidents <-list(ymd("103年1月1日",tz="Asia/Taipei"),
list(list())
)
str(accidents)
accidents <-list(time=ymd("103年1月1日",tz="Asia/Taipei"),
bureais=list(list())
)
str(accidents)
accidents <-list(time=ymd("103年1月1日",tz="Asia/Taipei"),
bureais=list(list("駕駛人過失-超速失控_含未減速",0,"駕駛人過失-酒後駕車",0,"駕駛人過失-未注意車前狀況",0,"駕駛人過失-肇事逃逸",0,"駕駛人過失-未保持行車安全間距",0,"駕駛人過失-未依規定讓車"))
)
str(accidents)
course <-list(approve=T,
course_info=list(coursename="會計學",type="必",credits=3,
time_place=list(list(weekday="星期三",
time_slots=c(7,8,9),
classroom="商2F05"))))
str(course)
course
courseUpdate <-list(approve=T,
course_info=list(coursename="會計學",type="必",credits=3,
time_place=list(list(weekday="星期三",
time_slots=c(7,8,9),classroom="商2F05"),
list(weekday="星期二",time_slot=5,classroom="商2F05"))))
str(courseUpdate)
courseUpdate
accidents <-list(time=ymd("103年1月1日",tz="Asia/Taipei"),
bureais=list(`板橋分局`=list("駕駛人過失-超速失控_含未減速",0,"駕駛人過失-酒後駕車",0,"駕駛人過失-未注意車前狀況",0,"駕駛人過失-肇事逃逸",0,"駕駛人過失-未保持行車安全間距",0,"駕駛人過失-未依規定讓車"))
)
str(accidents)
# accidents
accidents <-list(time=ymd("103年1月1日",tz="Asia/Taipei"),
bureais=list(`板橋分局`=list("駕駛人過失-超速失控_含未減速",0,"駕駛人過失-酒後駕車",0,"駕駛人過失-未注意車前狀況",0,"駕駛人過失-肇事逃逸",0,"駕駛人過失-未保持行車安全間距",0,"駕駛人過失-未依規定讓車",0,"駕駛人過失-行駛疏忽",0,"駕駛人過失－違反號誌管制",0,"駕駛人過失-違反標誌標線",0,"駕駛人過失-逆向行駛",0,"駕駛人過失-轉彎不當",0,"駕駛人過失-搶越行人穿越道",0,"駕駛人過失-其他",0,"機件故障",0,"行人過失",0,"交通管制設施缺陷",0,"其他",0))
)
str(accidents)
accidents <-list(time=ymd("103年1月1日",tz="Asia/Taipei"),
bureaus=list(`板橋分局`=list("駕駛人過失-超速失控_含未減速",0,"駕駛人過失-酒後駕車",0,"駕駛人過失-未注意車前狀況",0,"駕駛人過失-肇事逃逸",0,"駕駛人過失-未保持行車安全間距",0,"駕駛人過失-未依規定讓車",0,"駕駛人過失-行駛疏忽",0,"駕駛人過失－違反號誌管制",0,"駕駛人過失-違反標誌標線",0,"駕駛人過失-逆向行駛",0,"駕駛人過失-轉彎不當",0,"駕駛人過失-搶越行人穿越道",0,"駕駛人過失-其他",0,"機件故障",0,"行人過失",0,"交通管制設施缺陷",0,"其他",0))
)
str(accidents)
# accidents
str(accidents)
accidents <-list(time=ymd("103年1月1日",tz="Asia/Taipei"),
bureaus=list(`板橋分局`=list("駕駛人過失-超速失控_含未減速",0,"駕駛人過失-酒後駕車",0,"駕駛人過失-未注意車前狀況",0,"駕駛人過失-肇事逃逸",0,"駕駛人過失-未保持行車安全間距",0,"駕駛人過失-未依規定讓車",0,"駕駛人過失-行駛疏忽",0,"駕駛人過失－違反號誌管制",0,"駕駛人過失-違反標誌標線",0,"駕駛人過失-逆向行駛",0,"駕駛人過失-轉彎不當",0,"駕駛人過失-搶越行人穿越道",0,"駕駛人過失-其他",0,"機件故障",0,"行人過失",0,"交通管制設施缺陷",0,"其他",0), `海山分局`=list("駕駛人過失-超速失控_含未減速",0,"駕駛人過失-酒後駕車",0,"駕駛人過失-未注意車前狀況",0,"駕駛人過失-肇事逃逸",0,"駕駛人過失-未保持行車安全間距",0,"駕駛人過失-未依規定讓車",0,"駕駛人過失-行駛疏忽",0,"駕駛人過失－違反號誌管制",0,"駕駛人過失-違反標誌標線",0,"駕駛人過失-逆向行駛",0,"駕駛人過失-轉彎不當",0,"駕駛人過失-搶越行人穿越道",0,"駕駛人過失-其他",0,"機件故障",0,"行人過失",0,"交通管制設施缺陷",0,"其他",0))
)
str(accidents)
accidents <-list(time=ymd("103年1月1日"),
bureaus=list(`板橋分局`=list("駕駛人過失-超速失控_含未減速",0,"駕駛人過失-酒後駕車",0,"駕駛人過失-未注意車前狀況",0,"駕駛人過失-肇事逃逸",0,"駕駛人過失-未保持行車安全間距",0,"駕駛人過失-未依規定讓車",0,"駕駛人過失-行駛疏忽",0,"駕駛人過失－違反號誌管制",0,"駕駛人過失-違反標誌標線",0,"駕駛人過失-逆向行駛",0,"駕駛人過失-轉彎不當",0,"駕駛人過失-搶越行人穿越道",0,"駕駛人過失-其他",0,"機件故障",0,"行人過失",0,"交通管制設施缺陷",0,"其他",0), `海山分局`=list("駕駛人過失-超速失控_含未減速",0,"駕駛人過失-酒後駕車",0,"駕駛人過失-未注意車前狀況",0,"駕駛人過失-肇事逃逸",0,"駕駛人過失-未保持行車安全間距",0,"駕駛人過失-未依規定讓車",0,"駕駛人過失-行駛疏忽",0,"駕駛人過失－違反號誌管制",0,"駕駛人過失-違反標誌標線",0,"駕駛人過失-逆向行駛",0,"駕駛人過失-轉彎不當",0,"駕駛人過失-搶越行人穿越道",0,"駕駛人過失-其他",0,"機件故障",0,"行人過失",0,"交通管制設施缺陷",0,"其他",0))
)
str(accidents)
# accidents
accidents <-list(time=ymd("103年1月1日"),
bureaus=list(`板橋分局`=list("駕駛人過失-超速失控_含未減速",0,"駕駛人過失-酒後駕車",0,"駕駛人過失-未注意車前狀況",0,"駕駛人過失-肇事逃逸",0,"駕駛人過失-未保持行車安全間距",0,"駕駛人過失-未依規定讓車",0,"駕駛人過失-行駛疏忽",0,"駕駛人過失－違反號誌管制",0,"駕駛人過失-違反標誌標線",0,"駕駛人過失-逆向行駛",0,"駕駛人過失-轉彎不當",0,"駕駛人過失-搶越行人穿越道",0,"駕駛人過失-其他",1,"機件故障",0,"行人過失",0,"交通管制設施缺陷",0,"其他",0), `海山分局`=list("駕駛人過失-超速失控_含未減速",0,"駕駛人過失-酒後駕車",0,"駕駛人過失-未注意車前狀況",0,"駕駛人過失-肇事逃逸",0,"駕駛人過失-未保持行車安全間距",0,"駕駛人過失-未依規定讓車",0,"駕駛人過失-行駛疏忽",0,"駕駛人過失－違反號誌管制",0,"駕駛人過失-違反標誌標線",0,"駕駛人過失-逆向行駛",0,"駕駛人過失-轉彎不當",0,"駕駛人過失-搶越行人穿越道",1,"駕駛人過失-其他",0,"機件故障",0,"行人過失",0,"交通管制設施缺陷",0,"其他",0))
)
str(accidents)
# accidents
source("https://www.dropbox.com/s/bvs0m4oxw7yaqxw/108-2-hw1-3.R?dl=1")
fiveReceipts <- .randomReceipts(n=5)
levels(fiveReceipts)
levels_fiveREceipts <-levels(fiveReceipts)
# levels_fiveReceipts
levels(fiveReceipts)
levels_fiveREceipts <-levels(fiveReceipts)
levels_fiveReceipts
levels(fiveReceipts)
levels_fiveReceipts <-levels(fiveReceipts)
levels_fiveReceipts
as.integer(fiveReceipts)
storage_fiveReceipts <-as.integer(fiveReceipts)
storage_fiveReceipts
as.character(fiveReceipts)
chr_fiveReceipts <-as.character(fiveReceipts)
chr_fiveReceipts
sum(fiveReceipts)
sum(as.numeric(fiveReceipts))
source("https://www.dropbox.com/s/bvs0m4oxw7yaqxw/108-2-hw1-3.R?dl=1")
fiveReceipts <- .randomReceipts(n=5)
levels(fiveReceipts)
levels_fiveReceipts <-levels(fiveReceipts)
levels_fiveReceipts
as.integer(fiveReceipts)
storage_fiveReceipts <-as.integer(fiveReceipts)
storage_fiveReceipts
sum(as.integer(levels_fiveReceipts))
sum(as.integer(levels_fiveReceipts))
sum_fiveReceipts <-sum(as.integer(levels_fiveReceipts))
sum_fiveReceipts
# 啟動一個乾淨空的R環境
source("https://www.dropbox.com/s/xtge2ghfb7dhple/108-2-hw1-4.R?dl=1")
# 除了Global environment會清空，之前引入的套件也會被移除
knitr::opts_chunk$set(echo = TRUE)
my_108_total_credits <- 15
_108_total_credits <- 15
15
15
_my_108_total_credits <- 15
my.108.total_credits <- 15
my.108.total_credits <- 15
.108.total_credits <- 15 # 隱藏變數
.my.108.total_credits <- 15
我的108學年總學分數 <- 15
`我的108學年總學分數` <- 15 # 特殊名稱處理，`不是名稱的一部份
`.108.total_credits` <- 15
# 啟動一個乾淨空的R環境
source("https://www.dropbox.com/s/xtge2ghfb7dhple/108-2-hw1-4.R?dl=1")
# 除了Global environment會清空，之前引入的套件也會被移除
yy <- 2020
mm <- `Mar.`
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0(yy,",",mm,dd)),
list(
name="小明",
`是否完成`=True,
完成所花時間(秒)=350,
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0(yy,,mm,dd)),
list(
name="小明",
`是否完成`=True,
完成所花時間(秒)=350,
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0(yy,mm,dd)),
list(
name="小明",
`是否完成`=True,
完成所花時間(秒)=350,
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0("yy,mm,dd")),
list(
name="小明",
`是否完成`=True,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0("yy,mm,dd")),
list(
name="小明",
`是否完成`=True,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd"),
list(
name="小明",
`是否完成`=True,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd"),
list(
name="小明",
`是否完成`=True,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd"),
list(
name="小明",
`是否完成`=True,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd"),
list(
name="小明",
`是否完成`=True,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd"),
list(
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yymmdd"),
list(
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
event_list
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd",tz="Asia/Taipei"),
list(
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
event_list
event_list
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd",tz="Asia/Taipei"),
list(
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
event_list
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd",tz="Asia/Taipei"),
list(
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
