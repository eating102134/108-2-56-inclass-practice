event_list <- list(
time=ymd("yy,mm,dd"),
list(
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yymmdd"),
list(
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
event_list
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd",tz="Asia/Taipei"),
list(
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
event_list
event_list
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd",tz="Asia/Taipei"),
list(
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
event_list
library(lubridate)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy,mm,dd",tz="Asia/Taipei"),
list(
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
))
knitr::opts_chunk$set(echo = TRUE)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
str(listExample)
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
str(get1)
get1_layer <- get1$`108-1`
get1_layer2 <- get1_layer[[1]]$teacher
get1_layer2
str(get2)
get2_layer <-get2[[1]]$`108-1`[[1]]$teacher
ge2_layer
get2_layer
today <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
tomorrow <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
weather <- list(today,tomorrow)
print(weather)
str(today)
today[[1]][[2]]
##可以改成
today <- list(
list("台北市",
highest_temp=c(highest_temp = 25),
lowest_temp=c(lowest_temp = 18)),
list("新北市",
highest_temp=c(highest_temp = 24),
lowest_temp=c(lowest_temp = 15)))
str(today)
today[[1]]$highest_temp
str(tomorrow)
tomorrow <- list(
list("台北市",
highest_temp=c(highest_temp = 25),
lowest_temp=c(lowest_temp = 18)),
list("新北市",
highest_temp=c(highest_temp = 24),
lowest_temp=c(lowest_temp = 15)))
str(tomorrow)
tomorrow[[1]]$highest_temp
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
pi <- c(3,1,4,1,5,9,2,6,5,3,5)
gift <-pi[[8]]
gift
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
View(course)
str(course)
time_place <-course[[2]]$time_place
time_place
time_place <-list(course[[2]]$time_place)
time_place
time_place <-course[[2]]$time_place
class(time_place)
time_place
class(time_place)
time_place <-course[[2]]$time_place
time_place
str(course)
course[[2]]$type <-"選"
course[[1]]$approve <-TRUE
# course_update
course
course[[2]]$type <-"選"
course[[1]] <-TRUE
course
# course_update
course[[2]]$type <-"選"
course[[1]] <-TRUE
course_update <-course
# course_update
course[[2]]$type <-"選"
course[[1]] <-TRUE
course_update <-course
course_update
class(course[[1]])
course[[2]]$type <-"選"
course[[1]] <-TRUE
course_update <-course
course_update
str(course_update)
str(course_update)
course_update[[2]][["teacher"]] <-"紀學檜"
course_update2 <-course_update
# course_update2
course_update[[2]][["teacher"]] <-"紀學檜"
course_update2 <-course_update
course_update2
str(course_update2)
course_update[[2]][["teacher"]] <-"紀學檜"
course_update2 <-course_update
course_update2
fromJSON("https://www.dropbox.com/s/3of3hxzt86oyci8/Gamemaster.json?dl=1", simplifyDataFrame = F) -> Gamemaster
Pikachu <-Gamemaster[[27]]
View(Gamemaster)
Pikachu <-Gamemaster[[2]][[27]]
str(Pikachu)
# Pikachu
class(Pikachu)# Pikachu
Pikachu <-Gamemaster[[2]][[27]]
Pikachu
Pikachu <-Gamemaster[[1]][[27]]
Pikachu
str(Pikachu)
Pikachu[[4]][c(1,2,3)] <-c(112,96,111)
str(Pikachu)
# Pikachu_stats
Pikachu_stats <-Pikachu[[4]][c(1,2,3)] <-c(112,96,111)
str(Pikachu_stats)
class(Pikachu_stats)
# Pikachu_stats
Pikachu_stats <-Pikachu[[4]][c(1,2,3)] <-c(112,96,111)
str(Pikachu_stats)
# Pikachu_stats
str(Pikachu)
Pikachu[[4]][c(1,2,3)] <-c(112,96,111)
str(Pikachu)
Pikachu_stats <-Pikachu[[4]][c(1,2,3)]
Pikachu_stats
Pikachu[[4]][c(1,2,3)] <-c(112,96,111)
Pikachu_stats <-Pikachu[[4]][c(1,2,3)]
Pikachu_stats
class(Pikachu_stats)
Pikachu[[4]][c(1,2,3)] <-c(112,96,111)
Pikachu_stats <-Pikachu[[4]][c(1,2,3)]
Pikachu_stats
class(Pikachu_stats)
class(Pikachu_stats[[1]])
Pikachu[[4]][c(1,2,3)] <-c(112,96,111)
Pikachu_stats <-Pikachu[[4]][c(1,2,3)]
Pikachu_stats
str(Gamemaster[[1]][[46]])
Gamemaster[[1]][[46]][[2]] <-"Jigglypuff"
Jigglypuff <-Gamemaster[[1]][[46]]
Jigglypuff
str(Pikachu)
str(Jigglypuff)
Jigglypuff_tech <-Jigglypuff[c(6,7,8)]
Pikachu_defaultIVs <-Pikachu[[9]]
Gamemaster[[1]][[731]] <-list(
dex=c(778),
speciesName="Mimikyu",
speciesId="mimikyu",
baseStats=Pikachu_stats,
type=c("ghost","fairy"),
Jigglypuff_tech,
Pikachu_defaultIVs
)
str(Gamemaster[[1]][[731]])
# Gamemaster
Jigglypuff_tech1 <-Jigglypuff[[6]]
Jigglypuff_tech2 <-Jigglypuff[[7]]
Jigglypuff_tech3 <-Jigglypuff[[8]]
Pikachu_defaultIVs <-Pikachu[[9]]
Gamemaster[[1]][[731]] <-list(
dex=c(778),
speciesName="Mimikyu",
speciesId="mimikyu",
baseStats=Pikachu_stats,
type=c("ghost","fairy"),
Jigglypuff_tech1,
Jigglypuff_tech2,
Jigglypuff_tech3,
defaultIVs=Pikachu_defaultIVs
)
str(Gamemaster[[1]][[731]])
# Gamemaster
Jigglypuff_tech1 <-Jigglypuff[[6]]
Jigglypuff_tech2 <-Jigglypuff[[7]]
Jigglypuff_tech3 <-Jigglypuff[[8]]
Pikachu_defaultIVs <-Pikachu[[9]]
Gamemaster[[1]][[731]] <-list(
dex=c(778),
speciesName="Mimikyu",
speciesId="mimikyu",
baseStats=Pikachu_stats,
type=c("ghost","fairy"),
fastMoves=Jigglypuff_tech1,
chargedMoves=Jigglypuff_tech2,
legacyMoves=Jigglypuff_tech3,
defaultIVs=Pikachu_defaultIVs
)
str(Gamemaster[[1]][[731]])
# Gamemaster
knitr::opts_chunk$set(echo = TRUE)
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在: 替換
a[[4]] <- "7" # 元素不存在： 增加
a[c(5,6)] <- c("J", "K")
a
#使用前一章的向量疊代(recursive vector concatenate)法，新增一個“Mary”
a <- c(a,c("Mary") #ch3向量疊代
a
#使用前一章的向量疊代(recursive vector concatenate)法，新增一個“Mary”
a <- c(a,c("Mary"))#ch3向量疊代
a
library(lubridate)
list1 <-
list(
list(
name="Jack",
birthday=ymd("1998-03-21"),
status=c(height=177, weight=80)
)
)
str(list1)
# 更改日期
list1[[1]]$birthday <- ymd("1997-03-21")
# 新增資料
list1[[2]] <- list(
name="Mary",
birthday=ymd("1998-08-24")
)
str(list1)
list1[[2]]$status <- c(height=163, weight=45)
list1[[1]]$status[["height"]] <- 176
str(list1)
##使用[.] <-
##由於[.]會保留母層結構，所以<-右側要使用和母層相同的型態設定：
##母層若為list，則需用list(...)方式增加。
##母層若為atomic vector，則用c(...)方式增加。
list1[[1]][["age"]] <- 21
list1[[2]]["age"] <- list(21)
# 改變「一個」時，使用[[ ]]比較不會錯。
str(list1)
knitr::opts_chunk$set(echo = TRUE)
a <- c(2, 3, 5)
b <- c(4,-1, 3)
a <- c(2, 3, 5)
b <- c(4,-1, 3)
a+b
a-b
a*b
a/b
a %% b
a ** b
sequenceNums <- c(11, 6, 8, 11, 12, 11, 3, 7, 10, 8)
print(sequenceNums)
sequenceNums %% 2 # 餘數為1則是奇數，0則是偶數
5*c(1,3,4)+7
# 其實是
c(5)*c(1,3,4)+c(7)
## 對向量5，向量7進行recycle:
c(5,5,5)*c(1,3,4)+c(7,7,7)
## Recycle等長後才進行elementwise operation:
c(5*1+7, 5*3+7, 5*4+7)
# 狀況一: 堆疊一定倍數剛好一樣長
c(2,3)/c(-2,-13,10,22)
c(2,3,2,3)/c(-2,-13,10,22)
# 狀況二: 倍數堆疊一定會超過，只好截斷
c(2,3)/c(-2,-13,10)
c(2,3,2)/c(-2,-13,10)
paste0(
c("我叫"), c("小明","小美")
)
paste0(
c("我叫"), c("小明","小美")
)
paste0(
c("他叫","我叫"), c("小明","小美","大雄")
)
example <- list(
name=c("小明","小花","小新","美美"),
height=c(175,166,170,160),
weight=c(77,NA,60,43),
birthday=lubridate::ymd(c("1998-03-11","1999-12-22","1995-08-22","2001-10-10")),
hobby=c("美食 旅遊","旅遊 時尚","3C 美食","音樂 旅遊"),
residence=c("Taipei","New Taipei","Taichung","Kaohsiung"),
allowance=factor(c("0-1000","1001-2000","2000+","1001-2000")),
bloodType=c("A","B","B","O")
)
str(example)
pick_example <-example$height >=70
pick_example <-example$height >=170
example[pick_example]
example$name[pick_example]
source("https://www.dropbox.com/s/qsrw069n94k61lj/transcript100to103_list.R?dl=1")
#各學屆2年級人數
table(transcript100to103$`學屆`)
# 各學屆2年級成績大於85年數
table(transcript100to103$`學屆`[pick_above85])
#各學屆2年級人數
table(transcript100to103$`學屆`)
#各學屆2年級人數
table(transcript100to103$`學屆`)
str(transcript100to103)
#各學屆2年級人數
table(transcript100to103$`學屆`)
# 各學屆2年級成績大於85年數
str(transcript100to103)
pick_above85 <-transcript100to103$`成績`
table(transcript100to103$`學屆`[pick_above85])
table(transcript100to103$`學屆`[pick_above85])
# 各學屆2年級成績大於85年數
table(transcript100to103$`學屆`)
pick_above85 <-transcript100to103$`成績`
table(transcript100to103$`學屆`[pick_above85])
pick_above85 <-transcript100to103$`成績` >=85
table(transcript100to103$`學屆`[pick_above85])
# 各學屆2年級人數
table(transcript100to103$學屆)
# 各學屆2年級成績大於85人數
table(transcript100to103$學屆[pick_above85])
str(example)
above_98 <-example$birthday >= ymd("19980101")
library(lubridate)
above_98 <-example$birthday >= ymd("19980101")
example$birthday[above_98]
example$name[above_98]
str(example)
library(lubridate)
above_98 <-example$birthday >= ymd("19980101")
example$name[above_98]
print(example[c(name,birthday)])
print(example[c("name","birthday")])
example$name[above_98]
source("https://www.dropbox.com/s/16h6ggua6qtydci/exchangeRate.R?dl=1")
exchangeRate_after98 <-
list(
`期間`=exchangeRate$`期間`[pick_after98_01],
`幣別`=exchangeRate$`幣別`[pick_after98_01],
`匯率`=exchangeRate$`匯率`[pick_after98_01]
)
source("https://www.dropbox.com/s/16h6ggua6qtydci/exchangeRate.R?dl=1")
str(exchangeRate)
pick_after98_01 <-exchangeRate$期間 >=ymd("19980101")
pick_after98_01 <-exchangeRate$`期間` >=ymd("19980101")
str(exchangeRate)
pick_after98_01 <-exchangeRate$`期間` >=ymd("19980101")
exchangeRate_after98 <-
list(
`期間`=exchangeRate$`期間`[pick_after98_01],
`幣別`=exchangeRate$`幣別`[pick_after98_01],
`匯率`=exchangeRate$`匯率`[pick_after98_01]
)
```{r}
pick_after98_01 <-exchangeRate$`期間` >=ymd("19980101")
exchangeRate_after98 <-
list(
`期間`=exchangeRate$`期間`[pick_after98_01],
`幣別`=exchangeRate$`幣別`[pick_after98_01],
`匯率`=exchangeRate$`匯率`[pick_after98_01]
)
exchangeRate_after98
str(exchangeRate_after98)
str(example)
above_1000 <-example$allowance >=1000
level(example$allowance)
levels(example$allowance)
class(example$allowance)
levels(example$allowance)
class(example$allowance)
example$allowance <-
ordered(example$allowance)
example$allowance <-
factor(
example$allowance,
levels=c("0-1000", "1001-2000", "2000+"),
ordered = T # 設定為可排序factor
)
pick_allowanceOver1000 <- example$allowance >= "1001-2000"
example$name[pick_allowanceOver1000]
pick_allowanceOver1000 <- example$allowance >= "1001-2000"
example$name[pick_allowanceOver1000]
jsonlite::fromJSON("https://www.dropbox.com/s/3uijub7xheib405/list_victimAges_female.json?dl=1", simplifyDataFrame = F) -> list_victimAges_female
str(list_victimAges_female)
list_victimAges_female$年 <-as.integer(list_victimAges_female$年)
list_victimAges_female$年 <-as.integer("list_victimAges_female$年")
str(list_victimAges_female)
str(list_victimAges_female)
jsonlite::fromJSON("https://www.dropbox.com/s/3uijub7xheib405/list_victimAges_female.json?dl=1", simplifyDataFrame = F) -> list_victimAges_female
str(list_victimAges_female)
list_victimAges_female$`數目` <-as.integer(list_victimAges_female$`數目`)
str(list_victimAges_female)
list_victimAges_female$`性別` <-as.factor(list_victimAges_female$`性別`)
str(list_victimAges_female)
levels(list_victimAges_female$年齡層) -> levels_ages
print(levels_ages)
levels(list_victimAges_female$`年齡層`) -> levels_ages
print(levels_ages)
str(list_victimAges_female)
print(levels_ages)
#將levels順序改成: 不詳，總計，0_5歲，12_17歲，…，70歲以上。
print(list_victimAges_female$年齡層)
#將levels順序改成: 不詳，總計，0_5歲，12_17歲，…，70歲以上。
print(list_victimAges_female$`年齡層`)
#將levels順序改成: 不詳，總計，0_5歲，12_17歲，…，70歲以上。
list_victimAges_female$`年齡層` <-factor(list_victimAges_female$`年齡層`,
levels = c("不詳","0_5歲","12_17歲","18_23歲","24_29歲",
"30_39歲","40_49歲","50_59歲","60_64歲","65_69歲","70歲以上"                            ),
ordered = T)
#將levels順序改成: 不詳，總計，0_5歲，12_17歲，…，70歲以上。
list_victimAges_female$`年齡層` <-factor(list_victimAges_female$`年齡層`,
levels = c("不詳","0_5歲","12_17歲","18_23歲","24_29歲",
"30_39歲","40_49歲","50_59歲","60_64歲","65_69歲","70歲以上"                            ),
ordered = T)
#將levels順序改成: 不詳，總計，0_5歲，12_17歲，…，70歲以上。
list_victimAges_female$`年齡層` <-factor(list_victimAges_female$`年齡層`,
levels = c("不詳","0_5歲","12_17歲","18_23歲","24_29歲",
"30_39歲","40_49歲","50_59歲","60_64歲","65_69歲","70歲以上"                            ),
ordered = T)
str(list_victimAges_female)
sum(list_victimAges_female$數目, na.rm=T)
sum(list_victimAges_female$數目[pick_above30], na.rm = T)
#加na.rm=T是因為再加總的時候 R語言遇到NA就不能計算 因為NA的意思是有資料 但是不知道確切數字是多少
pick_above30 <-list_victimAges_female$年齡層 >=30
sum(list_victimAges_female$`數目`[pick_above30], na.rm = T)
sum(list_victimAges_female$`數目`, na.rm=T)
#加na.rm=T是因為再加總的時候 R語言遇到NA就不能計算 因為NA的意思是有資料 但是不知道確切數字是多少
list_victimAges_female$`年齡層` <-ordered(list_victimAges_female$`年齡層`)
pick_above30 <-list_victimAges_female$`年齡層` >=30
sum(list_victimAges_female$`數目`[pick_above30], na.rm = T)
#加na.rm=T是因為再加總的時候 R語言遇到NA就不能計算 因為NA的意思是有資料 但是不知道確切數字是多少
pick_above30 <-list_victimAges_female$`數目` >=30
sum(list_victimAges_female$`數目`[pick_above30], na.rm = T)
#加na.rm=T是因為再加總的時候 R語言遇到NA就不能計算 因為NA的意思是有資料 但是不知道確切數字是多少
pick_above30 <-list_victimAges_female$`年齡層` >="30_39歲"
sum(list_victimAges_female$`數目`[pick_above30], na.rm = T)
