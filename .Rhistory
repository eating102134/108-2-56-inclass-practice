knitr::opts_chunk$set(echo = TRUE)
library(googlesheets4)
install.packages(c("dplyr", "lubridate"))
install.packages("googlesheets4")
library(googlesheets4)
library(googlesheets4)
library(dplyr)
library(lubridate)
library(dplyr)
install.packages("tidyverse")
a <- 2
a = 2 # = 與 <-同義
3 -> b
a
`我的108學年總分數`
`我的108學年總分數`<-15
`我的108學年總分數`<- 15
`我的108學年總分數`<- 1
`我的108學年總分數` <- 1
my_108_total_credits <- 15
my.108.total_credits <- 15
.my.108.total_credits <- 15
我的108學年總學分數 <- 15
`我的108學年總學分數` <- 15 # 特殊名稱處理，`不是名稱的一部份
`.108.total_credits` <- 15
我的108學年總學分數 <- 15
`我的108學年總分數`
`我的108學年總分數` <- 15
`我的108學年總分數`
`我的年紀` <- 20
my_age <- `我的年紀`
knitr::opts_chunk$set(echo = TRUE)
num1 <- 5
vNum1 <- c(2,5)
vNum2 <- c(2, num1)
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum3 <- c(vNum1,vNum2)
vNum4 <- c(-1,5,2,3)
vNum5 <- c(c(-1,5),c(2,3))
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum3 <- c(vNum1,vNum2)
vNum4 <- c(-1,5,2,3)
vNum5 <- c(c(-1,5),c(2,3))
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum4 <- c() # 空向量
vNum3 <- c(vNum2, vNum1)
vNum4 <- c(vNum4, vNum1) # 向量疊代 （recursive vector concatenate）
vNum3 <- c(vNum2, vNum1)
vNum4 <- c(vNum4, vNum1) # 向量疊代 （recursive vector concatenate）
vNum3 <- c(vNum2, vNum1)
vNum4 <- c(vNum4, vNum1) # 向量疊代 （recursive vector concatenate）
vNum3 <- c(vNum2, vNum1)
vNum4 <- c(vNum4, vNum1) # 向量疊代 （recursive vector concatenate）
vNum3 <- c(vNum2, vNum1)
vNum4 <- c(vNum4, vNum1) # 向量疊代 （recursive vector concatenate）
num1<-5 # 非整數
num2<-5L # 整數
num1Vector<-c(5,6,7)
num2Vector<-c(5L,6L,7L)
char1<-"你好"
char2<-'你好'
num1<-5 # 非整數
num2<-5L # 整數
num1Vector<-c(5,6,7)
num2Vector<-c(5L,6L,7L)
char1Vector<-c("你好","How are you?")
HeSaid <- "他說:"今天多了一個確診""
HeSaid <- '他說:"今天多了一個確診"'
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum4 <- c() # 空向量
HeSaids <- "他說:\"今天多了一個確診\""
HeSaids <- "他說:\"今天多了一個確診"\"
HeSaids <- "他說:\"今天多了一個確診\""
library(httr)
library(dplyr)
GET("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits") %>%
content() %>%
View()
library(googlesheets4)
`出席狀況表單網址` <- GET(https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit)  # 缺乏定義值
library(googlesheets4)
`出席狀況表單網址` <- GET("https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit")  # 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
library(googlesheets4)
`出席狀況表單網址` <- GET("https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit")  # 缺乏定義值
ss <- as_sheets_idc(`出席狀況表單網址`)
library(googlesheets4)
`出席狀況表單網址` <- GET("https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit")  # 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
library(googlesheets4)
`出席狀況表單網址` <- c("https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit")  # 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
homework_sheet <- sheets_read(ss,sheet=1)
knitr::opts_chunk$set(echo = TRUE)
class(majors10_char)
# 10位學生的主系
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)
class(majors10_char)
majors10_factor <- factor(majors10_char)
# 或
majors10_factor <- factor(
c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
)
typeof(majors10_factor)
class(majors10_factor)
c("經濟學系","25")
a <- c("經濟學系","25")
as.integer(majors10_factor)
levels(majors10_factor)
## factor 裡面會有level level的用意就是將分類的規則告訴我們 例如這個例子中就是將社會學系設為1 經濟學系設為2 所以上面的as.integer才會出現2112212221這樣的東西
level簡單來說就是factor的對照表
levels(majors10_factor)
## factor 裡面會有level level的用意就是將分類的規則告訴我們 例如這個例子中就是將社會學系設為1 經濟學系設為2 所以上面的as.integer才會出現2112212221這樣的東西
## level簡單來說就是factor的對照表
stringInteger <- c("1","2","-11")
class(stringInteger) # 無法進行數值運算
stringInteger+2
stringInteger <- c("1","2","-11")
class(stringInteger) # 無法進行數值運算
a <- as.integer(stringInteger)
a+2
trueInteger <- as.integer(stringInteger)
class(trueInteger) # 可以進行數值運算
typeof(trueInteger)
trueInteger+2
studentId <- c(410773002, 410773015)
a <- as.character(studentId)
library(lubridate)
tpeTime <- ymd_hms("2020-03-18 13:52:40",
tz="Asia/Taipei")
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40")
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",tz="Europe/Lisbon")
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",tz="Europe/Lisbon")
typeof(pgTime)
class(pgTime)
##在電腦中儲存是數字double 所以如果用as.double 就會顯示出此時間和UTC插了多少秒 因此可以用來看兩個時區的時間是否相同
as.double(pgTime)
as.double(tpeTime)
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",tz="Europe/Lisbon")
typeof(pgTime)
class(pgTime)
##在電腦中儲存是數字double 所以如果用as.double 就會顯示出此時間和UTC插了多少秒 因此可以用來看兩個時區的時間是否相同
as.double(pgTime)
as.double(tpeTime)
with_tz(tpeTime, tzone="UTC")
with_tz(pgTime, tzone="UTC")
with_tz(tpeTime, tzone="UTC")
with_tz(pgTime, tzone="UTC")
with_tz(tpeTime, tzone="Europe/Paris")
with_tz(pgTime, tzone="Europe/Paris")
with_tz(tpeTime, tzone="UTC")
with_tz(pgTime, tzone="UTC")
with_tz(tpeTime, tzone="Europe/Paris")
with_tz(pgTime, tzone="Europe/Paris")
with_tz(tpeTime,tzone = "Africa/Abidjan")
browseURL("https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit#gid=458686645")
student1 <-c("2020-03-04T06:56:29Z","2020-03-11 14:16:43","2020-03-11 14:34:33")
student1 <-c("2020-03-04T06:56:29Z","2020-03-11 14:16:43","2020-03-11 14:34:33")
student1showup <-ymd_hms(student1)
student1 <-c("2020-03-04T06:56:29Z","2020-03-11 14:16:43","2020-03-11 14:34:33")
student1showup <-ymd_hms(student1,tz="Asia/Taipei")
student1 <-c("2020-03-04T06:56:29Z","2020-03-11 14:16:43","2020-03-11 14:34:33")
student1showup <-ymd_hms(student1,tz="Asia/Taipei")
typeof(student1showup)
class(student1showup)
studentTime <-c(
ymd_hms("2020-03-04T06:56:29Z"),
ymd_hms("2020-03-11 14:16:43",tz="UTC"),
ymd_hms("2020-03-11 14:34:33",tz="UTC")
)
studentTime
studentTime <-c(
ymd_hms("2020-03-04T06:56:29Z"),
ymd_hms("2020-03-11 14:16:43",tz="Asia/Taipei"),
ymd_hms("2020-03-11 14:34:33",tz="Asia/Taipei")
)
studentTime
with_tz(studentTime,tzone = "Europe/Paris")
with_tz(studentTime,tzone = "Europe/Paris")
c("2020-03-31T13:40:55Z","一芳","2","水果茶")
##都用Vector寫的話因為要相同的type 所以都把他們認為character
##用list的話每個的type可以不同
list(ymd_hms(2020-03-31T13:40:55Z),"一芳",2,"水果茶")
##用list的話每個的type可以不同
list(ymd_hms("2020-03-31T13:40:55Z"),"一芳",2,"水果茶")
C("108學年第1學期","高級會計學","高等統計學","108學年第2學期","食在拉丁美洲")
C("108學年第1學期","高級會計學","高等統計學","108學年第2學期","食在拉丁美洲")
c("108學年第1學期","高級會計學","高等統計學","108學年第2學期","食在拉丁美洲")
##即使我將vector用好幾個括號呈現 他也不會有疊成的效果
c(c("108學年第1學期"),c("高級會計學","高等統計學"),c("108學年第2學期"),c("食在拉丁美洲"))
list(c("108學年第1學期"),c("高級會計學","高等統計學"),
c("108學年第2學期"),c("食在拉丁美洲"))
list(listc("108學年第1學期","高級會計學","高等統計學"),
list("108學年第2學期","食在拉丁美洲"))
list(list("108學年第1學期","高級會計學","高等統計學"),
list("108學年第2學期","食在拉丁美洲"))
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
`108學年第1學期`=list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
`108學年第2學期`=list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
Commit <-list(
author=list("Martin老師","mtlin@gm.ntpu.edu.tw",ymd_hms("2020-03-25T07:17:40Z")),
committer=list("emilyluckey","emily007@gmail.com",ymd_hms("2020-03-26T08:18:40Z")),
message=c("update")
)
print(Commit)
print(Commit)
Commit <-list(
author=list(`name`="Martin老師",
`email`="mtlin@gm.ntpu.edu.tw",
`time`=ymd_hms("2020-03-25T07:17:40Z")),
committer=list(`name`="emilyluckey",
`email`="emily007@gmail.com",
`time`=ymd_hms("2020-03-26T08:18:40Z")),
message=c("update")
)
print(Commit)
print(Commit)
browseURL("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits")
toJSON(commit)
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(commit)
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(Commit)
`小明`=list(108,1,
list("Alice","個體經濟學",85,"Mark","總體經濟學",73),
108,2,
list("Jason","作業研究",90)
)
print(`小明`)
print("小明")
"小明" <-list(108,1,
list("Alice","個體經濟學",85,"Mark","總體經濟學",73),
108,2,
list("Jason","作業研究",90)
)
print("小明")
"小明" <-list(108,1,
list("Alice","個體經濟學",85,"Mark","總體經濟學",73),
108,2,
list("Jason","作業研究",90)
)
print(小明)
Score <-`小明`=list(108,1,
list("Alice","個體經濟學",85,"Mark","總體經濟學",73),
108,2,
list("Jason","作業研究",90)
)
Score <-`小明`=list(108,1,
list("Alice","個體經濟學",85,"Mark","總體經濟學",73),
108,2,
list("Jason","作業研究",90)
)
print(Score)
Score <-list(list(108,1,
list("Alice","個體經濟學",85,"Mark","總體經濟學",73),
108,2,
list("Jason","作業研究",90)))
print(Score)
Score <-list(
`小明`=list(
`學年度`=108,
`學期`=1,
list(
name="Alice",
subject="個體經濟學",
score=85,
name="Mark",
subject="總體經濟學",
score=73),
`學年度`=108,
`學期`=2,
list(
name="Jason",
subject="作業研究",
score=90)))
print(Score)
Score <-list(
`小明`=list(
`學年度`=108,
`學期`=1,
list(
name="Alice",
subject="個體經濟學",
score=85,
name="Mark",
subject="總體經濟學",
score=73),
`學年度`=108,
`學期`=2,
list(
name="Jason",
subject="作業研究",
score=90)))
print(Score)
